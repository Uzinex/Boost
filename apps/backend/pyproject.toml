# ============================================================
# Uzinex Boost v2.0 — Backend Configuration (pyproject.toml)
# ============================================================
# Этот файл описывает Python-проект, его зависимости и настройки.
# Используется Poetry для управления пакетами и окружением.
# ------------------------------------------------------------
# Версия: 2.0.0
# Python: >=3.11
# Автор: Feruz Dilov (Nexar Voltrex)
# ============================================================

[tool.poetry]
name = "uzinex-backend"
version = "2.0.0"
description = "High-performance backend for Uzinex Boost v2.0 (FastAPI, SQLAlchemy, Alembic, Async)"
authors = ["Feruz Dilov <founder@uzinex.uz>"]
license = "MIT"
readme = "README.md"
homepage = "https://uzinex.uz"
repository = "https://github.com/uzinex/boost-backend"
keywords = ["uzinex", "backend", "fastapi", "postgresql", "alembic", "async"]

# Папка исходников
packages = [{ include = "src" }]

# ============================================================
# Dependencies (runtime)
# ============================================================
[tool.poetry.dependencies]
python = "^3.11"

# --- Web Framework
fastapi = "^0.115.0"
uvicorn = { extras = ["standard"], version = "^0.30.0" }

# --- Database & ORM
sqlalchemy = "^2.0.36"
asyncpg = "^0.29.0"
alembic = "^1.14.0"

# --- Auth & Security
python-jose = "^3.3.0"
bcrypt = "^4.1.3"
passlib = "^1.7.4"
pydantic = "^2.8.2"
pydantic-settings = "^2.2.1"

# --- Logging & Monitoring
loguru = "^0.7.2"

# --- Utils
python-dotenv = "^1.0.1"
email-validator = "^2.2.0"
pytz = "^2024.2"

# --- Async & Background
aiofiles = "^24.1.0"
httpx = "^0.27.2"

# --- Testing
pytest = "^8.3.2"
pytest-asyncio = "^0.23.8"

# ============================================================
# Dev Dependencies (tools & linters)
# ============================================================
[tool.poetry.group.dev.dependencies]
black = "^24.10.0"
isort = "^5.13.2"
flake8 = "^7.1.1"
mypy = "^1.12.1"
pre-commit = "^3.8.0"

# ============================================================
# Tool Configuration
# ============================================================

[tool.black]
line-length = 100
target-version = ["py311"]
exclude = '''
/(
    .venv
  | migrations
  | __pycache__
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100
include_trailing_comma = true
known_first_party = ["src"]
known_third_party = ["fastapi", "sqlalchemy", "pydantic", "loguru"]
skip = ["__pycache__", "migrations"]

[tool.mypy]
python_version = "3.11"
warn_unused_configs = true
warn_return_any = true
warn_unused_ignores = true
ignore_missing_imports = true
strict_optional = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]

# ============================================================
# Build system
# ============================================================
[build-system]
requires = ["poetry-core>=1.8.0"]
build-backend = "poetry.core.masonry.api"
