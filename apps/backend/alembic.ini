# ============================================================
# Uzinex Boost — Alembic Configuration
# ============================================================
# Конфигурация системы миграций базы данных.
# Используется SQLAlchemy и Alembic для управления схемой БД.
# ------------------------------------------------------------
# Версия проекта: 2.0.0
# Дата создания: 2025-10-13
# ============================================================

[alembic]
# Путь к папке миграций (где env.py, versions/)
script_location = src/db/migrations

# Сколько последних файлов отображать в истории
truncate_slug_length = 40

# Кэширование конфигурации (ускоряет операции)
revision_environment = true
timezone = UTC


# ------------------------------------------------------------
# Database Connection
# ------------------------------------------------------------
# URL к базе данных задаётся динамически через переменные окружения.
# Для локальной разработки можно задать вручную:
# sqlalchemy.url = postgresql+asyncpg://user:password@localhost:5432/uzinex

sqlalchemy.url = %(DB_URL)s


# ------------------------------------------------------------
# Logging Configuration
# ------------------------------------------------------------

[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers = console
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers = console
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stdout,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s [%(levelname)s] %(name)s: %(message)s
datefmt = %Y-%m-%d %H:%M:%S


# ------------------------------------------------------------
# Environment Variables (пример для dev)
# ------------------------------------------------------------
# Для работы Alembic через Docker или Railway:
# export DB_URL="postgresql+asyncpg://postgres:postgres@db:5432/uzinex"
#
# Важно: Alembic сам использует синхронное подключение,
# но в src/db/migrations/env.py конвертация в async уже реализована.
