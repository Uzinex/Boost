"""
Uzinex Boost ‚Äî Referral Service
===============================

–°–µ—Ä–≤–∏—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π –∏ –±–æ–Ω—É—Å–∞–º–∏.

–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:
-----------
–†–µ–∞–ª–∏–∑—É–µ—Ç –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫—É –ø–∞—Ä—Ç–Ω—ë—Ä—Å–∫–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã:
- —É—á—ë—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π;
- –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ –±–æ–Ω—É—Å–æ–≤;
- –ø—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–æ–≤ –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏;
- –ø–æ–≤—ã—à–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤;
- –∞–Ω—Ç–∏—Ñ—Ä–æ–¥ –∏ –ª–∏–º–∏—Ç—ã –ø–æ –≤—Ä–µ–º–µ–Ω–∏.

–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤:
- api.v1.routes.referral
- domain.rules.referral_rules
- domain.events.referral_events
- db.repositories.referral_repository
- domain.services.balance_service
"""

from __future__ import annotations
from datetime import datetime
from typing import Optional

from sqlalchemy.ext.asyncio import AsyncSession

from domain.services.base import BaseService
from domain.rules.referral_rules import ReferralRules
from domain.events.referral_events import (
    ReferralRegisteredEvent,
    ReferralBonusGrantedEvent,
    ReferralLevelUpEvent,
)
from domain.services.balance_service import BalanceService
from db.repositories.referral_repository import ReferralRepository
from db.repositories.user_repository import UserRepository


class ReferralService(BaseService):
    """
    –£–ø—Ä–∞–≤–ª—è–µ—Ç –ª–æ–≥–∏–∫–æ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã Uzinex Boost.
    """

    def __init__(self, session: AsyncSession):
        super().__init__(session)
        self.ref_repo = ReferralRepository(session)
        self.user_repo = UserRepository(session)
        self.balance_service = BalanceService(session)

    # -------------------------------------------------
    # üîπ –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞
    # -------------------------------------------------
    async def register_referral(self, inviter_id: int, referral_id: int):
        """
        –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ (–ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è).
        """
        total_referrals = await self.ref_repo.count_by_inviter(inviter_id)
        rule = await ReferralRules.can_invite(inviter_id, total_referrals)
        if not rule.is_allowed:
            return {"success": False, "message": rule.message}

        record = await self.ref_repo.create_referral(
            inviter_id=inviter_id,
            referral_id=referral_id,
            joined_at=datetime.utcnow(),
        )

        await self.publish_event(
            ReferralRegisteredEvent(inviter_id=inviter_id, referral_id=referral_id)
        )
        await self.commit()
        await self.log(f"–ù–æ–≤—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª {referral_id} –¥–æ–±–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {inviter_id}")
        return {"success": True, "referral_id": record.referral_id}

    # -------------------------------------------------
    # üîπ –ù–∞—á–∏—Å–ª–∏—Ç—å –±–æ–Ω—É—Å –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
    # -------------------------------------------------
    async def grant_signup_bonus(self, inviter_id: int, referral_id: int, referral_joined_at: datetime):
        """
        –ù–∞—á–∏—Å–ª—è–µ—Ç –±–æ–Ω—É—Å –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        """
        rule = await ReferralRules.can_receive_signup_bonus(referral_joined_at)
        if not rule.is_allowed:
            return {"success": False, "message": rule.message}

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–Ω–µ–≤–Ω–æ–≥–æ –ª–∏–º–∏—Ç–∞
        today_sum = await self.ref_repo.get_today_bonus_sum(inviter_id)
        limit_check = await ReferralRules.check_daily_bonus_limit(today_sum)
        if not limit_check.is_allowed:
            return {"success": False, "message": limit_check.message}

        await self.balance_service.deposit(inviter_id, amount=5000)

        await self.ref_repo.add_bonus_record(
            inviter_id=inviter_id,
            referral_id=referral_id,
            bonus_amount=5000,
            bonus_type="signup",
        )

        await self.publish_event(
            ReferralBonusGrantedEvent(
                inviter_id=inviter_id,
                referral_id=referral_id,
                amount=5000,
                bonus_type="signup",
            )
        )
        await self.commit()
        await self.log(f"–ë–æ–Ω—É—Å –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –Ω–∞—á–∏—Å–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {inviter_id}")
        return {"success": True, "amount": 5000}

    # -------------------------------------------------
    # üîπ –ù–∞—á–∏—Å–ª–∏—Ç—å –±–æ–Ω—É—Å –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª–∞
    # -------------------------------------------------
    async def grant_task_bonus(self, inviter_id: int, referral_id: int, first_task_date: datetime):
        """
        –ù–∞—á–∏—Å–ª—è–µ—Ç –±–æ–Ω—É—Å –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª–∞ (–≤—ã–ø–æ–ª–Ω–∏–ª –ø–µ—Ä–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ).
        """
        rule = await ReferralRules.can_receive_task_bonus(first_task_date)
        if not rule.is_allowed:
            return {"success": False, "message": rule.message}

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–æ–≤
        today_sum = await self.ref_repo.get_today_bonus_sum(inviter_id)
        limit_check = await ReferralRules.check_daily_bonus_limit(today_sum)
        if not limit_check.is_allowed:
            return {"success": False, "message": limit_check.message}

        await self.balance_service.deposit(inviter_id, amount=3000)

        await self.ref_repo.add_bonus_record(
            inviter_id=inviter_id,
            referral_id=referral_id,
            bonus_amount=3000,
            bonus_type="task",
        )

        await self.publish_event(
            ReferralBonusGrantedEvent(
                inviter_id=inviter_id,
                referral_id=referral_id,
                amount=3000,
                bonus_type="task",
            )
        )
        await self.commit()
        await self.log(f"–ë–æ–Ω—É—Å –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞—á–∏—Å–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {inviter_id}")
        return {"success": True, "amount": 3000}

    # -------------------------------------------------
    # üîπ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –ø–æ–≤—ã—à–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è
    # -------------------------------------------------
    async def check_level_up(self, inviter_id: int):
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –¥–æ—Å—Ç–∏–≥ –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã.
        """
        inviter = await self.user_repo.get_by_id(inviter_id)
        if not inviter:
            return {"success": False, "message": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω"}

        active_referrals = await self.ref_repo.count_active_referrals(inviter_id)
        current_level = inviter.referral_level or 0

        rule = await ReferralRules.can_level_up(active_referrals, current_level)
        if not rule.is_allowed:
            return {"success": False, "message": rule.message}

        inviter.referral_level = rule.metadata.get("new_level")
        await self.commit()

        await self.publish_event(
            ReferralLevelUpEvent(
                inviter_id=inviter_id,
                new_level=inviter.referral_level,
                active_referrals=active_referrals,
            )
        )
        await self.log(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {inviter_id} –ø–æ–≤—ã—Å–∏–ª —É—Ä–æ–≤–µ–Ω—å –¥–æ {inviter.referral_level}")
        return {"success": True, "new_level": inviter.referral_level}

    # -------------------------------------------------
    # üîπ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
    # -------------------------------------------------
    async def get_user_referrals(self, inviter_id: int, limit: int = 50):
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        """
        refs = await self.ref_repo.get_by_inviter(inviter_id, limit)
        return [r.as_dict() for r in refs]

    # -------------------------------------------------
    # üîπ –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    # -------------------------------------------------
    async def get_global_stats(self):
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≥–ª–æ–±–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ.
        """
        stats = await self.ref_repo.get_stats()
        await self.log("–ü–æ–ª—É—á–µ–Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã")
        return stats
