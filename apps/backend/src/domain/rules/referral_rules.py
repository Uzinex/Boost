"""
Uzinex Boost ‚Äî Referral Rules
=============================

–ë–∏–∑–Ω–µ—Å-–ø—Ä–∞–≤–∏–ª–∞, —Ä–µ–≥—É–ª–∏—Ä—É—é—â–∏–µ —Ä–∞–±–æ—Ç—É —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã.

–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:
-----------
–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –∫—Ç–æ, –∫–æ–≥–¥–∞ –∏ –ø—Ä–∏ –∫–∞–∫–∏—Ö —É—Å–ª–æ–≤–∏—è—Ö –ø–æ–ª—É—á–∞–µ—Ç –±–æ–Ω—É—Å—ã –∏ —É—Ä–æ–≤–Ω–∏:
- –ø—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–æ–≤ –ø–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è–º;
- —É—Å–ª–æ–≤–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–Ω—É—Å–æ–≤;
- –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∞;
- –∫–æ–Ω—Ç—Ä–æ–ª—å –∑–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–π –∏ —Ñ—Ä–æ–¥–∞.

–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤:
- domain.services.referral
- domain.services.balance
- domain.services.analytics
- adapters.notifications
- api.v1.routes.referral
"""

from __future__ import annotations
from datetime import datetime, timedelta
from typing import Dict, Any

from domain.rules.base import BaseRule


# -------------------------------------------------
# üîπ –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –ø–æ–ª–∏—Ç–∏–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
# -------------------------------------------------
MAX_REFERRALS_PER_USER = 100                # –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä—è–º—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
MIN_REFERRAL_ACTIVITY_DAYS = 3              # –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª–∞ –¥–æ –±–æ–Ω—É—Å–∞
REFERRAL_BONUS_FOR_SIGNUP = 5_000.0         # –±–æ–Ω—É—Å –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω–æ–≥–æ
REFERRAL_BONUS_FOR_TASK = 3_000.0           # –±–æ–Ω—É—Å –∑–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª–æ–º
LEVEL_UP_REQUIREMENTS = {                   # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è
    1: 5,
    2: 15,
    3: 30,
    4: 60,
}
MAX_REFERRAL_BONUS_PER_DAY = 50_000.0       # –ª–∏–º–∏—Ç –±–æ–Ω—É—Å–æ–≤ –∑–∞ –¥–µ–Ω—å
BONUS_COOLDOWN = timedelta(hours=12)        # –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –±–æ–Ω—É—Å–∞–º–∏


# -------------------------------------------------
# üîπ –ü—Ä–∞–≤–∏–ª–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
# -------------------------------------------------
class ReferralRules(BaseRule):
    """
    –ù–∞–±–æ—Ä –±–∏–∑–Ω–µ—Å-–ø—Ä–∞–≤–∏–ª, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ–º –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–º–∏ –±–æ–Ω—É—Å–∞–º–∏.
    """

    rule_name = "ReferralRules"

    # -------------------------------------------------
    # üî∏ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–∞ –ø–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è–º
    # -------------------------------------------------
    @classmethod
    async def can_invite(cls, inviter_id: int, total_referrals: int):
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –º–æ–∂–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –µ—â—ë –æ–¥–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞.
        """
        if total_referrals >= MAX_REFERRALS_PER_USER:
            return await cls._deny(f"–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã—Ö ({MAX_REFERRALS_PER_USER})")
        return await cls._allow("–ú–æ–∂–Ω–æ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –Ω–æ–≤–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞", {"referrals": total_referrals})

    # -------------------------------------------------
    # üî∏ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤–∞ –Ω–∞ –±–æ–Ω—É—Å –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
    # -------------------------------------------------
    @classmethod
    async def can_receive_signup_bonus(cls, referral_joined_at: datetime):
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –º–æ–∂–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —Ä–µ—Ñ–µ—Ä–∞–ª–∞.
        """
        now = datetime.utcnow()
        if now - referral_joined_at < timedelta(hours=1):
            return await cls._deny("–ë–æ–Ω—É—Å –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –Ω–∞—á–∏—Å–ª—è–µ—Ç—Å—è –Ω–µ —Å—Ä–∞–∑—É, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ")
        return await cls._allow("–ë–æ–Ω—É—Å –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —Ä–∞–∑—Ä–µ—à—ë–Ω")

    # -------------------------------------------------
    # üî∏ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤–∞ –Ω–∞ –±–æ–Ω—É—Å –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª–∞
    # -------------------------------------------------
    @classmethod
    async def can_receive_task_bonus(cls, referral_first_task_date: datetime):
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –º–æ–∂–Ω–æ –ª–∏ –Ω–∞—á–∏—Å–ª–∏—Ç—å –±–æ–Ω—É—Å –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª–∞.
        """
        if datetime.utcnow() - referral_first_task_date < timedelta(days=MIN_REFERRAL_ACTIVITY_DAYS):
            return await cls._deny(f"–†–µ—Ñ–µ—Ä–∞–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–∫—Ç–∏–≤–µ–Ω –Ω–µ –º–µ–Ω–µ–µ {MIN_REFERRAL_ACTIVITY_DAYS} –¥–Ω–µ–π")
        return await cls._allow("–ë–æ–Ω—É—Å –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä–∞–∑—Ä–µ—à—ë–Ω")

    # -------------------------------------------------
    # üî∏ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–∞ –±–æ–Ω—É—Å–æ–≤ –∑–∞ –¥–µ–Ω—å
    # -------------------------------------------------
    @classmethod
    async def check_daily_bonus_limit(cls, today_bonus_sum: float):
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–µ –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏ –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç –±–æ–Ω—É—Å–æ–≤.
        """
        if today_bonus_sum >= MAX_REFERRAL_BONUS_PER_DAY:
            return await cls._deny("–î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π –±–æ–Ω—É—Å–æ–≤ –∑–∞ –¥–µ–Ω—å")
        return await cls._allow("–ù–∞—á–∏—Å–ª–µ–Ω–∏–µ –±–æ–Ω—É—Å–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ", {"today_bonus_sum": today_bonus_sum})

    # -------------------------------------------------
    # üî∏ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –º–µ–∂–¥—É –±–æ–Ω—É—Å–∞–º–∏
    # -------------------------------------------------
    @classmethod
    async def check_bonus_cooldown(cls, last_bonus_time: datetime | None):
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø—Ä–æ—à–ª–æ –ª–∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤—Ä–µ–º–µ–Ω–∏ –º–µ–∂–¥—É –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è–º–∏.
        """
        if last_bonus_time and datetime.utcnow() - last_bonus_time < BONUS_COOLDOWN:
            return await cls._deny("–°–ª–µ–¥—É—é—â–∏–π –±–æ–Ω—É—Å –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤")
        return await cls._allow("–ú–æ–∂–Ω–æ –Ω–∞—á–∏—Å–ª–∏—Ç—å –Ω–æ–≤—ã–π –±–æ–Ω—É—Å")

    # -------------------------------------------------
    # üî∏ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è
    # -------------------------------------------------
    @classmethod
    async def can_level_up(cls, active_referrals: int, current_level: int):
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –¥–æ—Å—Ç–∏–≥ –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã.
        """
        next_level = current_level + 1
        required = LEVEL_UP_REQUIREMENTS.get(next_level)
        if not required:
            return await cls._deny("–î–æ—Å—Ç–∏–≥–Ω—É—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã")

        if active_referrals < required:
            return await cls._deny(
                f"–î–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —É—Ä–æ–≤–µ–Ω—å {next_level} —Ç—Ä–µ–±—É–µ—Ç—Å—è {required} –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤"
            )
        return await cls._allow("–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å —Ä–∞–∑—Ä–µ—à—ë–Ω", {"new_level": next_level})

    # -------------------------------------------------
    # üîπ –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã
    # -------------------------------------------------
    @classmethod
    async def _allow(cls, message: str, meta: Dict[str, Any] | None = None):
        return await cls._result(True, message, meta)

    @classmethod
    async def _deny(cls, message: str, meta: Dict[str, Any] | None = None):
        return await cls._result(False, message, meta)

    @classmethod
    async def _result(cls, allowed: bool, message: str, meta: Dict[str, Any] | None = None):
        from domain.rules.base import RuleResult
        return RuleResult(
            is_allowed=allowed,
            message=message,
            rule_name=cls.rule_name,
            metadata=meta or {},
        )
