"""
Uzinex Boost ‚Äî Referral Repository
==================================

–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–º–∏ —Å–≤—è–∑—è–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.

–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:
- —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–≤—è–∑—è–º–∏ "–ø—Ä–∏–≥–ª–∞—Å–∏–ª ‚Üí –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã–π";
- –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ –±–æ–Ω—É—Å–æ–≤ –∑–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è;
- —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∏ —Å—É–º–º–µ –±–æ–Ω—É—Å–æ–≤;
- –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ —Ä–æ—Å—Ç–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã.

–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤:
- domain.services.referrals
- api.v1.routes.users
- balance/transaction logic
"""

from __future__ import annotations
from typing import List, Optional
from sqlalchemy import select, func, update
from sqlalchemy.ext.asyncio import AsyncSession

from db.models.referral_model import Referral
from db.repositories.base import BaseRepository


class ReferralRepository(BaseRepository[Referral]):
    """
    –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–º–∏ —Å–≤—è–∑—è–º–∏.
    """

    def __init__(self, session: AsyncSession):
        super().__init__(session, Referral)

    # -------------------------------------------------
    # üîπ –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ—Ö –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    # -------------------------------------------------
    async def get_referrals_by_user(self, referrer_id: int) -> List[Referral]:
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
        """
        result = await self.session.execute(
            select(Referral)
            .where(Referral.referrer_id == referrer_id)
            .order_by(Referral.joined_at.desc())
        )
        return result.scalars().all()

    # -------------------------------------------------
    # üîπ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–≤—è–∑—å
    # -------------------------------------------------
    async def get_by_referred(self, referred_id: int) -> Optional[Referral]:
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–∞–∫ —Ä–µ—Ñ–µ—Ä–∞–ª.
        """
        result = await self.session.execute(
            select(Referral).where(Referral.referred_id == referred_id)
        )
        return result.scalar_one_or_none()

    # -------------------------------------------------
    # üîπ –ù–∞—á–∏—Å–ª–∏—Ç—å –±–æ–Ω—É—Å
    # -------------------------------------------------
    async def add_bonus(self, referred_id: int, amount: float) -> Optional[Referral]:
        """
        –î–æ–±–∞–≤–ª—è–µ—Ç –±–æ–Ω—É—Å —Ä–µ—Ñ–µ—Ä–∞–ª—É (—É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç bonus_amount).
        """
        await self.session.execute(
            update(Referral)
            .where(Referral.referred_id == referred_id)
            .values(bonus_amount=Referral.bonus_amount + amount)
            .execution_options(synchronize_session="fetch")
        )
        await self.session.commit()
        return await self.get_by_referred(referred_id)

    # -------------------------------------------------
    # üîπ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    # -------------------------------------------------
    async def get_referral_stats(self, referrer_id: int) -> dict:
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã:
        - –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã—Ö;
        - —Å—É–º–º–∞ –±–æ–Ω—É—Å–æ–≤ –∑–∞ –Ω–∏—Ö.
        """
        result = await self.session.execute(
            select(
                func.count(Referral.id),
                func.sum(Referral.bonus_amount),
            ).where(Referral.referrer_id == referrer_id)
        )
        total_referrals, total_bonus = result.first() or (0, 0.0)
        return {
            "total_referrals": total_referrals or 0,
            "total_bonus": round(float(total_bonus or 0), 2),
        }

    # -------------------------------------------------
    # üîπ –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    # -------------------------------------------------
    async def get_global_stats(self) -> dict:
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—â–∏–µ –º–µ—Ç—Ä–∏–∫–∏ –ø–æ –≤—Å–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–º —Å–≤—è–∑—è–º:
        - –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–≤—è–∑–µ–π;
        - –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–æ–Ω—É—Å–æ–≤;
        - —Å—Ä–µ–¥–Ω–∏–π –±–æ–Ω—É—Å.
        """
        result = await self.session.execute(
            select(
                func.count(Referral.id),
                func.sum(Referral.bonus_amount),
                func.avg(Referral.bonus_amount),
            )
        )
        count, total_bonus, avg_bonus = result.first() or (0, 0.0, 0.0)
        return {
            "total_links": count or 0,
            "total_bonus": round(float(total_bonus or 0), 2),
            "avg_bonus": round(float(avg_bonus or 0), 2),
        }
    