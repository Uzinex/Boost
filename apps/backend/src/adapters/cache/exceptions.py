"""
Uzinex Boost ‚Äî Cache Exceptions
===============================

–ú–æ–¥—É–ª—å –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏—è, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –ø–æ–¥—Å–∏—Å—Ç–µ–º–æ–π –∫—ç—à–∞.
–í—Å–µ –æ—à–∏–±–∫–∏ –Ω–∞—Å–ª–µ–¥—É—é—Ç—Å—è –æ—Ç CacheError –∏ –º–æ–≥—É—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ
–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–≤–Ω–µ —Å–µ—Ä–≤–∏—Å–æ–≤ –∏–ª–∏ middleware.
"""

from typing import Optional


# üîπ –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –≤—Å–µ—Ö –æ—à–∏–±–æ–∫ –∫—ç—à–∞
class CacheError(Exception):
    """–ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –≤—Å–µ—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º."""

    def __init__(self, message: str, *, key: Optional[str] = None, cause: Optional[Exception] = None):
        self.key = key
        self.cause = cause
        super().__init__(message)

    def __str__(self):
        base = super().__str__()
        if self.key:
            base += f" [key={self.key}]"
        if self.cause:
            base += f" (cause={self.cause})"
        return base


# üîπ –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Redis –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –±—ç–∫–µ–Ω–¥–∞
class CacheConnectionError(CacheError):
    """–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Redis."""
    pass


# üîπ –û—à–∏–±–∫–∞ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏/–¥–µ—Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö
class CacheSerializationError(CacheError):
    """–û—à–∏–±–∫–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è Python ‚Üî JSON –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –∫—ç—à–µ–º."""
    pass


# üîπ –ü—Ä–µ–≤—ã—à–µ–Ω–∏–µ –ª–∏–º–∏—Ç–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ (anti-spam / rate-limit)
class RateLimitExceeded(CacheError):
    """–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–µ–≤—ã—Å–∏–ª –¥–æ–ø—É—Å—Ç–∏–º—É—é —á–∞—Å—Ç–æ—Ç—É –¥–µ–π—Å—Ç–≤–∏–π."""

    def __init__(self, retry_after: int, key: Optional[str] = None):
        super().__init__(f"Rate limit exceeded. Retry after {retry_after}s", key=key)
        self.retry_after = retry_after


# üîπ –û—à–∏–±–∫–∞ –∏–¥–µ–º–ø–æ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏ (–ø–æ–≤—Ç–æ—Ä–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è)
class IdempotencyConflict(CacheError):
    """–ü–æ–ø—ã—Ç–∫–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏."""

    def __init__(self, key: str):
        super().__init__("Duplicate idempotent operation detected", key=key)


# üîπ –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ –∫—ç—à–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç Redis)
class CacheInternalError(CacheError):
    """–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å Redis."""
    pass


# üîπ –û—à–∏–±–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –∫–ª—é—á–∞, –µ—Å–ª–∏ –æ–∂–∏–¥–∞–µ—Ç—Å—è –Ω–∞–ª–∏—á–∏–µ
class CacheKeyNotFound(CacheError):
    """–ö–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫—ç—à–µ."""
    pass


__all__ = [
    "CacheError",
    "CacheConnectionError",
    "CacheSerializationError",
    "RateLimitExceeded",
    "IdempotencyConflict",
    "CacheInternalError",
    "CacheKeyNotFound",
]
