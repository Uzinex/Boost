"""
Uzinex Boost API v1 ‚Äî User Schemas
===================================

–°—Ö–µ–º—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏:
- —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ Telegram WebApp;
- –ø–æ–ª—É—á–µ–Ω–∏–µ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è;
- —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞.

–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤: /users, /auth, /stats, /balance.
"""

from __future__ import annotations
from datetime import datetime
from typing import Optional, List
from pydantic import BaseModel, Field

from .base import IDMixin, TimestampMixin


# -------------------------------------------------
# üîπ –ö—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
# -------------------------------------------------

class UserRead(IDMixin, TimestampMixin):
    """–ë–∞–∑–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ."""

    username: Optional[str] = Field(None, description="Telegram username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    first_name: Optional[str] = Field(None, description="–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∏–∑ Telegram)")
    language: str = Field("ru", description="–ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–π —è–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞")
    balance: float = Field(0.0, description="–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å (UZT)")
    is_active: bool = Field(True, description="–§–ª–∞–≥ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    referrer_id: Optional[int] = Field(None, description="ID –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

    class Config:
        orm_mode = True
        from_attributes = True
        json_schema_extra = {
            "example": {
                "id": 1201,
                "username": "feruz",
                "first_name": "Feruz",
                "language": "uz",
                "balance": 154.6,
                "is_active": True,
                "referrer_id": 42,
                "created_at": "2025-10-12T14:00:00",
                "updated_at": "2025-10-12T15:10:00"
            }
        }


# -------------------------------------------------
# üîπ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
# -------------------------------------------------

class UserUpdate(BaseModel):
    """–ú–æ–¥–µ–ª—å –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""

    username: Optional[str] = Field(None, description="Telegram username (–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å)")
    language: Optional[str] = Field(None, description="–ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–π —è–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞: uz | ru | en")

    class Config:
        json_schema_extra = {
            "example": {
                "username": "nexar",
                "language": "uz"
            }
        }


# -------------------------------------------------
# üîπ –û—Ç–≤–µ—Ç —Å –ø—Ä–æ—Ñ–∏–ª–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
# -------------------------------------------------

class UserProfileResponse(BaseModel):
    """–û—Ç–≤–µ—Ç API –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""

    ok: bool = Field(True, description="–§–ª–∞–≥ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏")
    user: UserRead = Field(..., description="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ")

    class Config:
        json_schema_extra = {
            "example": {
                "ok": True,
                "user": {
                    "id": 1201,
                    "username": "feruz",
                    "first_name": "Feruz",
                    "language": "uz",
                    "balance": 154.6,
                    "is_active": True,
                    "referrer_id": 42,
                    "created_at": "2025-10-12T14:00:00",
                    "updated_at": "2025-10-12T15:10:00"
                }
            }
        }


# -------------------------------------------------
# üîπ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞
# -------------------------------------------------

class ReferralUser(BaseModel):
    """–£–ø—Ä–æ—â—ë–Ω–Ω–∞—è –º–æ–¥–µ–ª—å –¥–ª—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª–∞."""

    id: int = Field(..., description="ID —Ä–µ—Ñ–µ—Ä–∞–ª–∞")
    username: Optional[str] = Field(None, description="Telegram username —Ä–µ—Ñ–µ—Ä–∞–ª–∞")
    joined_at: datetime = Field(..., description="–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∞")

    class Config:
        orm_mode = True
        from_attributes = True
        json_schema_extra = {
            "example": {
                "id": 2022,
                "username": "aziza",
                "joined_at": "2025-10-12T13:45:00"
            }
        }


class UserReferralsResponse(BaseModel):
    """–û—Ç–≤–µ—Ç API —Å–æ —Å–ø–∏—Å–∫–æ–º —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""

    ok: bool = Field(True, description="–§–ª–∞–≥ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏")
    count: int = Field(..., description="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤")
    referrals: List[ReferralUser] = Field(..., description="–°–ø–∏—Å–æ–∫ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤")

    class Config:
        json_schema_extra = {
            "example": {
                "ok": True,
                "count": 2,
                "referrals": [
                    {"id": 2022, "username": "aziza", "joined_at": "2025-10-12T13:45:00"},
                    {"id": 2041, "username": "dilshod", "joined_at": "2025-10-12T14:05:00"}
                ]
            }
        }


# -------------------------------------------------
# üîπ –û—Ç–≤–µ—Ç –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞
# -------------------------------------------------

class UserDeleteResponse(BaseModel):
    """–û—Ç–≤–µ—Ç API –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º —É–¥–∞–ª–µ–Ω–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞."""

    ok: bool = Field(True, description="–§–ª–∞–≥ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏")
    message: str = Field("Account deleted", description="–°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏–∏")

    class Config:
        json_schema_extra = {
            "example": {
                "ok": True,
                "message": "Account deleted"
            }
        }
