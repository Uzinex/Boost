"""
Uzinex Boost API v1 ‚Äî System Schemas
=====================================

–°–ª—É–∂–µ–±–Ω—ã–µ —Å—Ö–µ–º—ã –¥–∞–Ω–Ω—ã—Ö, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞, –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
–∏ –≤–µ—Ä—Å–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è API (—ç–Ω–¥–ø–æ–∏–Ω—Ç—ã /system/*).

–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:
- /system/ping ‚Äî –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API;
- /system/version ‚Äî –≤–µ—Ä—Å–∏—è –∏ –∞–ø—Ç–∞–π–º;
- /system/health ‚Äî –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π (DB, Redis, Telegram).
"""

from __future__ import annotations
from pydantic import BaseModel, Field
from typing import Optional


# -------------------------------------------------
# üîπ Ping
# -------------------------------------------------

class PingResponse(BaseModel):
    """–û—Ç–≤–µ—Ç –¥–ª—è —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ /system/ping."""
    ok: bool = Field(True, description="–°—Ç–∞—Ç—É—Å API")
    service: str = Field("Uzinex Boost API", description="–ù–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞")
    message: str = Field("pong", description="–û—Ç–≤–µ—Ç API –Ω–∞ ping")
    version: str = Field("2.0.0", description="–¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è API")
    environment: str = Field("production", description="–¢–µ–∫—É—â–µ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ")

    class Config:
        json_schema_extra = {
            "example": {
                "ok": True,
                "service": "Uzinex Boost API",
                "message": "pong",
                "version": "2.0.0",
                "environment": "production"
            }
        }


# -------------------------------------------------
# üîπ Version
# -------------------------------------------------

class VersionResponse(BaseModel):
    """–û—Ç–≤–µ—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –≤–µ—Ä—Å–∏–∏ API."""
    ok: bool = Field(True, description="–°—Ç–∞—Ç—É—Å API")
    version: str = Field(..., description="–í–µ—Ä—Å–∏—è —Å–±–æ—Ä–∫–∏ API")
    build: str = Field(..., description="–ù–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ —Ö—ç—à —Å–±–æ—Ä–∫–∏")
    author: str = Field("Uzinex Engineering Team", description="–ê–≤—Ç–æ—Ä –∏–ª–∏ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏")
    environment: str = Field(..., description="–û–∫—Ä—É–∂–µ–Ω–∏–µ API (production/staging/dev)")
    uptime_seconds: float = Field(..., description="–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã API –≤ —Å–µ–∫—É–Ω–¥–∞—Ö")

    class Config:
        json_schema_extra = {
            "example": {
                "ok": True,
                "version": "2.0.0",
                "build": "Uzinex Boost v2.0 ‚Äî FastAPI core",
                "author": "Uzinex Engineering Team",
                "environment": "production",
                "uptime_seconds": 412.55
            }
        }


# -------------------------------------------------
# üîπ Health
# -------------------------------------------------

class HealthDetails(BaseModel):
    """–ü–æ–¥—Ä–æ–±–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã."""
    database: str = Field(..., description="–°—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL (ok/fail)")
    cache: str = Field(..., description="–°—Ç–∞—Ç—É—Å Redis (ok/fail)")
    telegram: Optional[str] = Field(None, description="–°—Ç–∞—Ç—É—Å Telegram API (ok/fail)")

    class Config:
        json_schema_extra = {
            "example": {
                "database": "ok",
                "cache": "ok",
                "telegram": "ok"
            }
        }


class HealthResponse(BaseModel):
    """–û—Ç–≤–µ—Ç –¥–ª—è —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ /system/health."""
    ok: bool = Field(..., description="–û–±—â–∏–π —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã (True, –µ—Å–ª–∏ –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã –≤ –ø–æ—Ä—è–¥–∫–µ)")
    details: HealthDetails = Field(..., description="–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –ø–æ –ø–æ–¥—Å–∏—Å—Ç–µ–º–∞–º")
    environment: str = Field("production", description="–¢–µ–∫—É—â–µ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ")
    uptime_seconds: float = Field(..., description="–ê–ø—Ç–∞–π–º —Å–∏—Å—Ç–µ–º—ã –≤ —Å–µ–∫—É–Ω–¥–∞—Ö")

    class Config:
        json_schema_extra = {
            "example": {
                "ok": True,
                "details": {
                    "database": "ok",
                    "cache": "ok",
                    "telegram": "ok"
                },
                "environment": "production",
                "uptime_seconds": 784.23
            }
        }
