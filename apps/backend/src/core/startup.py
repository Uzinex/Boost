"""
Uzinex Boost Core ‚Äî Startup Sequence
====================================

–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã:
- PostgreSQL
- Redis
- Telegram Bot
- –ö—ç—à –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
"""

from __future__ import annotations
import logging
import asyncio

from core.database import engine
from core.config import settings
from adapters.cache.redis_cache import RedisCache
from adapters.telegram.client import TelegramClient

logger = logging.getLogger("uzinex.core.startup")


async def init_app() -> None:
    """
    –í—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–æ—á–µ—Ä–µ–¥–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –≤—Å–µ—Ö –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤.
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL, Redis –∏ Telegram Bot API.
    """
    logger.info("üöÄ Starting Uzinex Boost initialization sequence...")

    db_ok = False
    redis_ok = False
    telegram_ok = None

    # -------------------------------------------------
    # üóÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ PostgreSQL
    # -------------------------------------------------
    try:
        async with engine.begin() as conn:
            await conn.run_sync(lambda _: None)
        logger.info("üóÑ PostgreSQL connection: ‚úÖ OK")
        db_ok = True
    except Exception as e:
        logger.error(f"‚ùå PostgreSQL connection failed: {e}")

    # -------------------------------------------------
    # üß† –ü—Ä–æ–≤–µ—Ä–∫–∞ Redis
    # -------------------------------------------------
    try:
        cache = RedisCache()
        await cache.ping()
        logger.info(f"‚úÖ Connected to Redis ({settings.REDIS_URL})")
        redis_ok = True
    except Exception as e:
        logger.error(f"‚ùå Redis connection failed: {e}")

    # -------------------------------------------------
    # üîπ –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram Bot
    # -------------------------------------------------
    try:
        me = await telegram_client.get_me()
        username = me.get("username", "unknown")
        bot_id = me.get("id", "N/A")
        logger.info(f"ü§ñ Telegram bot connected: @{username} (id={bot_id})")
        telegram_ok = True
    except Exception as e:
        telegram_ok = False
        logger.warning(f"‚ö†Ô∏è Telegram bot check skipped or failed: {e}")


    # -------------------------------------------------
    # üß© –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á—ë—Ç
    # -------------------------------------------------
    summary = f"System summary ‚Üí DB: {db_ok} | Redis: {redis_ok} | Telegram: {telegram_ok}"
    logger.info(summary)
    logger.info("‚úÖ Startup checks completed successfully.")


__all__ = ["init_app"]
