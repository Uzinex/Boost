"""
Uzinex Boost ‚Äî Database Configuration (Railway Edition)
=======================================================

–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL —á–µ—Ä–µ–∑ SQLAlchemy + asyncpg.
–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç SSL (Railway proxy —Ç—Ä–µ–±—É–µ—Ç –∑–∞—â–∏—â—ë–Ω–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ).
"""

from __future__ import annotations

import ssl
from sqlalchemy.ext.asyncio import create_async_engine, AsyncSession
from sqlalchemy.orm import sessionmaker, declarative_base
from sqlalchemy import text
from core.config import settings


# -------------------------------------------------
# üîπ SSL –¥–ª—è Railway PostgreSQL
# -------------------------------------------------
ssl_context = ssl.create_default_context()
ssl_context.check_hostname = False
ssl_context.verify_mode = ssl.CERT_NONE


# -------------------------------------------------
# üîπ –°–æ–∑–¥–∞–Ω–∏–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –¥–≤–∏–∂–∫–∞ SQLAlchemy
# -------------------------------------------------
engine = create_async_engine(
    settings.DATABASE_URL,
    echo=False,
    future=True,
    pool_pre_ping=True,
    connect_args={"ssl": ssl_context},  # Railway —Ç—Ä–µ–±—É–µ—Ç SSL
)


# -------------------------------------------------
# üîπ –°–µ—Å—Å–∏—è –∏ –±–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å
# -------------------------------------------------
AsyncSessionLocal = sessionmaker(
    bind=engine,
    class_=AsyncSession,
    expire_on_commit=False,
)

Base = declarative_base()


# -------------------------------------------------
# üîπ Dependency helper
# -------------------------------------------------
async def get_session() -> AsyncSession:
    """
    –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏ –ë–î (FastAPI Depends).
    """
    async with AsyncSessionLocal() as session:
        yield session


# -------------------------------------------------
# üîπ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
# -------------------------------------------------
async def test_database_connection() -> bool:
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç True, –µ—Å–ª–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ.
    """
    try:
        async with engine.begin() as conn:
            await conn.execute(text("SELECT 1"))
        return True
    except Exception as e:
        import logging
        logging.error(f"‚ùå Database connection test failed: {e}")
        return False
